## Access Modifiers
snippet po
	protected ${0}
snippet pu
	public ${0}
snippet pr
	private ${0}
##
## static
snippet st
	static ${0}
snippet stb
	static {
		${0}
	}
##
## Basic Java packages and import
snippet im
	import ${0}
snippet j.b
	java.beans.
snippet j.i
	java.io.
snippet j.m
	java.math.
snippet j.n
	java.net.
snippet j.u
	java.util.

##
## Javadocs
snippet /*
	/**
	 * ${0}
	 */
snippet @br
	@brief ${0:Description}
snippet @fi
	@file ${0:`vim_snippets#Filename("$1")`}.java
snippet @pa
	@param ${0:param}
snippet @re
	@return ${0:param}

##
## Control Statements
snippet el
	else {
		${0}
	}
snippet eif
	else if (${1}) {
		${0}
	}
snippet if
	if (${1}) {
		${0}
	}

snippet ife
	if (${1}) {
		${2}
	} else {
		${0}
	}
##
## Create a Method
snippet m
	${1:void} ${2:method}(${3}) {
		${0}
	}
##
## Create a Variable
snippet v
	${1:Type} ${2:var};
##
## Javadocs
snippet /**
	/**
	 * ${0}
	 */
##
## Loops
snippet enfor
	for (${1} : ${2}) {
		${0}
		}

# For (default)
snippet for
	for (int ${1:i} = 0; $1 < ${2:count}; $1${3:++}) {
		${0}
	}

# For (empty)
snippet fore
	for (${1}; ${2}; ${3}) {
		${0}
		}

# For (defined variable)
snippet ford
	for (${1:i} = ${2:0}; ${3:condition}; $1${4:++}) {
		${0}
	}

snippet wh
	while (${1}) {
		${0}
	}
##
## Main method
snippet main
	public static void main (String[] args) {
		${0}
	}
##
## Print Methods
snippet sout
	System.out.${0};
snippet print
	System.out.print("${0:Message}");
snippet printf
	System.out.printf("${1:Message}", ${0:args});
snippet println
	System.out.println(${0});
##
## Terminate Methods or Loops
snippet re
	return ${1:value};
##
## Switch case
snippet sw
	switch (${1}) {
		${0}
	}
snippet case
	case ${1}:
		${0}
snippet def
	default:
		${0}
snippet br
	break;

##
## Try && catch
snippet try
	try {
		${0}
	}
snippet cat
	catch(${1:Exception e}) {
		${0}
	}
snippet tryc
	try {
		${1}
	} catch(${2:Exception e}) {
		${0}
	}
##
## Scanner from System.In
snippet Sc
	Scanner ${1:name} = new Scanner(System.in);
snippet sgetchar
	${1:scanner}.next().charAt(0);
snippet sgetstr
	${1:scanner}.next();
snippet sgetint
	${1:scanner}.nextInt();
snippet sgetdou
	${1:scanner}.nextDouble();
